# version: "3.8"
services:
  postgres:
    container_name: challenge_postgres
    image: "bitnami/postgresql"
    restart: always
    ports:
      - 5432:5432
    env_file:
      - .env
    # environment:
    #   POSTGRESQL_USERNAME: docker
    #   POSTGRESQL_PASSWORD: docker
    #   POSTGRESQL_DATABASE: rocketseat_challenge
    volumes:
      - "postgresql_data:/bitnami/postgresql"
    networks:
      - app-net

  zookeeper:
    container_name: challenge_zookeeper
    image: "bitnami/zookeeper:3"
    ports:
      - 2181:2181
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - app-net

  kafka:
    container_name: challenge_kafka
    hostname: kafka
    image: "bitnami/kafka:3.7.0"
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      # optional - enable topic auto create
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    networks:
      - app-net

  kafka_ui:
    image: provectuslabs/kafka-ui:master
    depends_on:
      - kafka
    ports:
      - 8080:8080
    networks:
      - app-net
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

networks:
  app-net:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgresql_data:
    driver: local
