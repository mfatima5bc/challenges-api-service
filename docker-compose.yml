# version: "3.8"
services:
  postgres:
    container_name: challenge_postgres
    image: "bitnami/postgresql"
    restart: always
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - "postgresql_data:/bitnami/postgresql"
    networks:
      - app-net

  zookeeper:
    container_name: challenge_zookeeper
    image: "bitnami/zookeeper:3"
    ports:
      - 2181:2181
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - app-net

  kafka:
    container_name: challenge_kafka
    hostname: kafka
    image: "bitnami/kafka:3.7.0"
    ports:
      - "9092:9092"
      - "29092:29092"
      - "29094:29094"
    volumes:
      - "kafka_data:/bitnami"
    networks:
      - app-net
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://kafka:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper

  kafka_ui:
    image: provectuslabs/kafka-ui:master
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8080:8080
    networks:
      - app-net
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  corrections_service:
    container_name: corrections_service
    build:
      context: ./packages/corrections
      dockerfile: Dockerfile
    restart: on-failure
    env_file: 
      # - .env
      - ./packages/corrections/.env
    networks:
      - app-net
    environment:
      - KAFKA_BROKERS=kafka:9092
    ports:
      - 3333:3333
    volumes:
      - "corrections_data:/usr/corrections-app"
    depends_on:
      - zookeeper
      - postgres
      - kafka

  challenges_service:
    container_name: challenges_service
    build:
      context: ./packages/challenges-service
      dockerfile: Dockerfile
    restart: on-failure
    env_file:
      - ./packages/challenges-service/.env
      # - ./.env
    environment:
      - KAFKA_BROKERS=kafka:9092
    networks:
      - app-net
    ports:
      - 3000:3000
    volumes:
      - "challenges_data:/usr/challenges-app"
    depends_on:
      - zookeeper
      - postgres
      - kafka
      - corrections_service

networks:
  app-net:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgresql_data:
    driver: local
  challenges_data:
    driver: local
  corrections_data:
    driver: local
